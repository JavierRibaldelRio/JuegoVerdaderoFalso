{"version":3,"sources":["frase.js","ClassePreguntas.js","boton.js","PanelBotones.js","Marcador.js","Notificacion.js","App.js","reportWebVitals.js","index.js"],"names":["Afirmacion","props","className","this","afirmacion","require","Component","AfirmacionObjeto","verdadero","Boton","funcionAlMarcar","idDelBoton","textoBoton","toLocaleLowerCase","id","onClick","usarFuncionAlMarcar","bind","disabled","estadoJuego","PanelBotones","alMarcar","Marcador","texto","valor","NotificacicionUsuario","undefined","trim","clase","tipo","App","state","vidas","arrayAfirmaciones","afirmacionesCorrectas","contadorDePreguntasFormuladas","notficacion","buenaNotificacion","console","log","notificacionAMostrar","correcto","setState","notificacion","setTimeout","arrayAfirmacionesPrimeroEliminado","shift","juegoParado","arr","array","i","length","j","Math","floor","random","temp","shuffle","jsonAfirmaciones","nuevoObjeto","Verdadero","push","hacerArrayAfirmaciones","afirmacionAMostrar","marcar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abe36834.chunk.js","sourcesContent":["var React = require('react'); //necesario para usa react\n\n//Este componente muestra la frase que aparece en el centro\nclass Afirmacion extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n    }\n\n    render() {\n\n\n\n        return (\n\n            <div className=\"afirmacion_div\">\n\n                <p className=\"afirmacion_texto\">{this.props.afirmacion}</p>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Afirmacion; //Prepara para la exportación de la afirmacion","function AfirmacionObjeto(afirmacion, verdadero) {\n\n    this.afirmacion = afirmacion;\n\n    this.verdadero = verdadero\n\n\n}\n\nexport default AfirmacionObjeto;","var React = require('react');\n\nclass Boton extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n\n    }\n\n    usarFuncionAlMarcar() {\n\n        this.props.funcionAlMarcar(this.props.verdadero);\n\n    }\n\n    render() {\n\n\n        var textoBoton = \"\";    //Almacena el texto que contiene el botón\n\n        var idDelBoton = \"\";    //Alamcena la id que tendra el formate del tipo del botón\n\n        if (this.props.verdadero === true) { //Si este boton es verdadero\n\n            textoBoton = \"Verdadero\" //Fija el texto a verdadero\n\n        }\n\n        else {          //Si no \n            textoBoton = \"Falso\"//Fija el texto a falso\n        }\n\n        idDelBoton = textoBoton.toLocaleLowerCase(); //Pasa a minuscuals el texto del bto\n        return (\n\n            <button className=\"Boton\" id={idDelBoton} onClick={this.usarFuncionAlMarcar.bind(this)} disabled={this.props.estadoJuego}>\n\n                {textoBoton}\n\n            </button>\n\n        )\n\n    }\n\n}\n\nexport default Boton;","import Boton from \"./boton\";\n\n\nvar React = require(\"react\");\n\n\nclass PanelBotones extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n    }\n\n    render() {\n\n\n        return (\n            <div className=\"Panel_Botones\">\n\n                <Boton estadoJuego={this.props.estadoJuego} verdadero={true} funcionAlMarcar={this.props.alMarcar.bind(this)}></Boton>\n                <Boton estadoJuego={this.props.estadoJuego} verdadero={false} funcionAlMarcar={this.props.alMarcar.bind(this)}></Boton>\n\n            </div >\n        )\n\n    }\n\n}\n\nexport default PanelBotones","//Este script almacena el componente del marcador\n\nvar React = require('react');\n\nclass Marcador extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n    }\n\n    render() {\n\n\n        return (\n            <table className=\"Marcador\">\n\n                <tbody>\n\n                    <tr>\n\n                        <td className=\"Texto_Marcador\">{this.props.texto}:</td>\n\n                        <td className=\"Texto_Marcador\">{this.props.valor}</td>\n\n                    </tr>\n\n                </tbody>\n\n            </table>\n        )\n    }\n\n}\n\nexport default Marcador;","var React = require('react');\n\nclass NotificacicionUsuario extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n\n\n        if (this.props.texto != undefined) {\n            //Le quita los espacios del principio\n            const texto = this.props.texto.trim();\n\n            //Añade la clase en funcion que sea true o  false\n            const clase = this.props.tipo ? \"Notificacion_correcta\" : \"Notificacion_incorrecta\";\n\n\n            return (\n\n                <table className={\"Notificacion \" + clase}>\n\n                    <tbody>\n\n                        <tr>\n                            <td>\n                                {texto}\n                            </td>\n                        </tr>\n\n                    </tbody>\n\n                </table>\n\n            )\n        }\n\n        return (\n            <p></p>\n        )\n\n    }\n}\n\nexport default NotificacicionUsuario;","import './App.css';\n\nimport Afirmacion from './frase.js';\nimport jsonAfirmaciones from './afirmaciones.json';\nimport AfirmacionObjeto from './ClassePreguntas';\nimport PanelBotones from './PanelBotones';\nimport Marcador from './Marcador';\nimport NotificacicionUsuario from './Notificacion';\n\nvar React = require('react');\n\nclass App extends React.Component {\n\n  constructor(props) {\n\n    super(props)\n    this.state = {\n      vidas: 3, //Almacena las vidas restantes\n\n      arrayAfirmaciones: undefined, //Almacena todas las afirmaciones coreectas\n\n      afirmacionesCorrectas: 0, //Almacena el numero de afiramciones correctas\n\n      contadorDePreguntasFormuladas: 0,\n\n      notficacion: undefined,   //Almacena a la notificación que va a mandar\n\n      buenaNotificacion: undefined\n\n\n    }\n  }\n\n\n  //Se ocupa de comprobar si se a marcado la respuesta correcta y en funcion de si se a marcado la respuesta correcta suma afirmaciones correctas o resta vidas\n  marcar(verdadero) {\n\n    console.log(verdadero);\n\n\n    var correcto = this.state.arrayAfirmaciones[0].verdadero === verdadero;\n\n    var notificacionAMostrar;\n\n    //Si es correcto suma uno al maracador de afirmaxiones corectas y si es falso resta una vida\n\n    if (correcto === true) {\n\n      this.setState({ afirmacionesCorrectas: this.state.afirmacionesCorrectas + 1 });\n\n      notificacionAMostrar = \"Correcto\";\n\n\n    } else if (correcto != true) {\n\n      this.setState({ vidas: this.state.vidas - 1 });\n\n      notificacionAMostrar = \"Incorrecto\";\n\n    }\n\n    this.setState({ notificacion: notificacionAMostrar, buenaNotificacion: correcto });\n\n\n    //Pone un ocntador hacía atras\n    setTimeout(function () {\n\n      //Revierte el estado poniendolo en configuración original\n      this.setState({ notificacion: undefined, buenaNotificacion: true });\n\n    }.bind(this), 3 * 1000);    //El numero es el tiempo en milisegundos, por eso multiplico por mil\n\n\n\n    //Elimina la primera casilla sel Array\n    let arrayAfirmacionesPrimeroEliminado = [...this.state.arrayAfirmaciones];\n    arrayAfirmacionesPrimeroEliminado.shift();\n    this.setState({ arrayAfirmaciones: arrayAfirmacionesPrimeroEliminado, contadorDePreguntasFormuladas: this.state.contadorDePreguntasFormuladas + 1 });\n\n\n  }\n\n  render() {\n\n    //Almacena si ele jeugo esta en marcha\n\n    var juegoParado = false;\n\n    //Hace combierte el json a un array de clases\n    function hacerArrayAfirmaciones() {\n\n      var arr = [];\n\n      for (var i = 0; i < jsonAfirmaciones.length; i++) {\n\n        let nuevoObjeto = new AfirmacionObjeto(jsonAfirmaciones[i].Afirmacion, jsonAfirmaciones[i].Verdadero);\n\n        arr.push(nuevoObjeto);\n      }\n\n      return arr\n    }\n\n    //Mezcla el array\n    function shuffle(arr) {\n\n      var array = arr;\n\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n      return array;\n    }\n\n    //Si el array afirmaciones esa indefinido lo crea\n    if (this.state.arrayAfirmaciones === undefined) {\n      this.state.arrayAfirmaciones = shuffle(hacerArrayAfirmaciones());\n\n    }\n\n    //Almacena lo que se mostrara como afirmacion\n\n\n    var afirmacionAMostrar = \"\";\n\n    //Se ocupa de decidir cual es la próxima afirmación\n    if (this.state.arrayAfirmaciones.length <= 1 || this.state.vidas === 0) {\n\n      afirmacionAMostrar = \"El juego se ha acabado, has acertado \" + this.state.afirmacionesCorrectas + \" afirmaciones de \" + this.state.contadorDePreguntasFormuladas + \".\";\n\n      juegoParado = true;\n\n    } else if (this.state.arrayAfirmaciones.length > 1) {\n\n      afirmacionAMostrar = this.state.arrayAfirmaciones[0].afirmacion;\n    }\n\n\n    return (\n      <div className=\"App\" >\n\n        <Afirmacion afirmacion={afirmacionAMostrar} />\n\n        <PanelBotones estadoJuego={juegoParado} alMarcar={this.marcar.bind(this)}/*Le pasa al panel de botones la funcón que se a de usar al marcar un botón*/ />\n\n        <br />\n\n        <hr />\n\n        <Marcador texto=\"Vidas\" valor={this.state.vidas} />\n\n        <Marcador texto=\"Afirmaciones correctas\" valor={this.state.afirmacionesCorrectas} />\n\n        <NotificacicionUsuario texto={this.state.notificacion} tipo={this.state.buenaNotificacion} />\n\n      </div>);\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}